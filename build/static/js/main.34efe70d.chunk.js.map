{"version":3,"sources":["assets/images/cryptocurrency.png","components/Navbar.jsx","services/CryptoApi.js","components/Homepage.jsx","components/ExchangePanelHeader.jsx","components/Exchanges.jsx","components/SingleStates.jsx","components/SingleGenericStats.jsx","components/CryptoDetailsLink.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Cryptocurrencies.jsx","services/CryptoNewsApi.js","components/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","Math","random","FundOutlined","MoneyCollectOutlined","BulbOutlined","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getSingleCrypto","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetSingleCryptoQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Typography","Homepage","data","isFetching","globalStats","stats","console","log","type","color","height","width","timeout","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Text","ExchangePanelHeader","exchange","rank","iconUrl","name","volume","numberOfMarkets","marketShare","Panel","Collapse","Exchanges","exchangeList","exchanges","map","showArrow","header","id","HTMLReactParser","description","SingleStates","SingleGenericStats","CryptoDetailsLink","link","href","target","rel","LineChart","currentPrice","coinName","coinHistory","setCoinHistory","coinPrice","coinTimestamp","i","history","length","push","price","Date","timestamp","toLocaleDateString","dataList","labels","datasets","label","fill","backgroundColor","borderColor","change","options","scales","yAxes","ticks","beginAtZero","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","marketCap","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","placeholder","onChange","date","links","Cryptocurrencies","coins","cryptos","setCryptos","searchTerm","setSearchTerm","filteredData","filter","toLowerCase","includes","toLocaleLowerCase","e","gutter","currency","xs","sm","lg","extra","alt","hoverable","CryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","News","setNewsCategory","cryptoList","isCryptosFetching","demoImage","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","style","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","textAlign","configureStore","reducer","ReactDOM","render","store","document","getElementById"],"mappings":"gTAAe,MAA0B,2C,OCkE1BA,MAtDf,WACE,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAS,MAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KAkBA,OAhBAC,qBAAU,WACR,IAAMC,EAAe,kBAAMF,EAAcG,OAAOC,aAIhD,OAHAD,OAAOE,iBAAiB,SAAUH,GAClCA,IAEO,kBAAMC,OAAOG,oBAAoB,SAAUJ,MACjD,CAACF,IAEJC,qBAAU,WAENH,IADEC,EAAa,QAKhB,CAACA,EAAYD,IAGd,sBAAKS,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,cAAC,IAAD,CAAQC,IAAKC,EAAMC,KAAK,UACxB,cAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGL,UAAU,OAAtC,SACE,cAAC,IAAD,CAAMM,GAAG,IAAT,2BAEF,cAAC,IAAD,CACEN,UAAU,yBACVO,QAAS,kBAAMhB,GAAeD,IAFhC,SAIE,cAACkB,EAAA,EAAD,SAGHlB,GACC,eAAC,IAAD,CAAMmB,MAAM,OAAZ,UACE,cAAC,IAAKC,KAAN,CAAsCR,KAAM,cAACS,EAAA,EAAD,IAA5C,SACE,cAAC,IAAD,CAAML,GAAG,IAAT,mBAD8B,IAAhBM,KAAKC,UAGrB,cAAC,IAAKH,KAAN,CAAsCR,KAAM,cAACY,EAAA,EAAD,IAA5C,SACE,cAAC,IAAD,CAAMR,GAAG,oBAAT,+BAD8B,IAAhBM,KAAKC,UAGrB,cAAC,IAAKH,KAAN,CAAsCR,KAAM,cAACa,EAAA,EAAD,IAA5C,SACE,cAAC,IAAD,CAAMT,GAAG,aAAT,wBAD8B,IAAhBM,KAAKC,UAGrB,cAAC,IAAKH,KAAN,CAAsCR,KAAM,cAACc,EAAA,EAAD,IAA5C,SACE,cAAC,IAAD,CAAMV,GAAG,QAAT,mBAD8B,IAAhBM,KAAKC,iB,0CCvDzBI,EAAmB,CACvB,kBAAmB,8BACnB,iBAAkB,sDAIdC,EAAgB,SAACC,GAAD,MAAU,CAAEA,MAAKC,QAASH,IAEnCI,EAAYC,YAAU,CACjCC,YAAa,YACbC,UAAWC,YAAe,CAAEC,QALd,yCAMdC,UAAW,SAACC,GAAD,MAAc,CACvBC,WAAYD,EAAQE,MAAM,CACxBA,MAAO,SAACC,GAAD,OAAWb,EAAc,gBAAD,OAAiBa,OAElDC,gBAAiBJ,EAAQE,MAAM,CAC7BA,MAAO,SAACG,GAAD,OAAYf,EAAc,SAAD,OAAUe,OAE5CC,iBAAkBN,EAAQE,MAAM,CAC9BA,MAAO,gBAAGG,EAAH,EAAGA,OAAQE,EAAX,EAAWA,WAAX,OACLjB,EAAc,QAAD,OAASe,EAAT,oBAA2BE,OAE5CC,aAAcR,EAAQE,MAAM,CAC1BA,MAAO,kBAAMZ,EAAc,qBAM/BmB,EAIEhB,EAJFgB,mBACAC,EAGEjB,EAHFiB,wBACAC,EAEElB,EAFFkB,yBACAC,EACEnB,EADFmB,qB,kCC3BMpC,EAAUqC,IAAVrC,MA4EOsC,MA1Ef,WAAqB,IAAD,EAClB,EAA6BL,EAAmB,IAAxCM,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRC,EAAW,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYG,MAEhC,OADAC,QAAQC,IAAIL,GACRC,EAEA,cAAC,IAAD,CACEK,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAKb,qCACE,cAACjD,EAAD,CAAOC,MAAO,EAAGL,UAAU,UAA3B,iCAGA,eAAC,IAAD,WACE,cAAC,IAAD,CAAKsD,KAAM,GAAX,SACE,cAAC,IAAD,CACEC,MAAM,yBACNC,MAAK,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAaY,UAGxB,cAAC,IAAD,CAAKH,KAAM,GAAX,SACE,cAAC,IAAD,CACEC,MAAM,kBACNC,MAAOE,IAAO,OAACb,QAAD,IAACA,OAAD,EAACA,EAAac,oBAGhC,cAAC,IAAD,CAAKL,KAAM,GAAX,SACE,cAAC,IAAD,CACEC,MAAM,mBACNC,MAAK,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAae,mBAGxB,cAAC,IAAD,CAAKN,KAAM,GAAX,SACE,cAAC,IAAD,CACEC,MAAM,mBACNC,MAAOE,IAAO,OAACb,QAAD,IAACA,OAAD,EAACA,EAAagB,oBAGhC,cAAC,IAAD,CAAKP,KAAM,GAAX,SACE,cAAC,IAAD,CACEC,MAAM,gBACNC,MAAOE,IAAO,OAACb,QAAD,IAACA,OAAD,EAACA,EAAaiB,qBAIlC,sBAAK9D,UAAU,yBAAf,UACE,cAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,aAA3B,kDAGA,cAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,YAA3B,SACE,cAAC,IAAD,CAAMM,GAAG,oBAAT,4BAGJ,cAAC,GAAD,CAAkByD,YAAU,IAC5B,sBAAK/D,UAAU,yBAAf,UACE,cAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,aAA3B,gCAGA,cAACI,EAAD,CAAOC,MAAO,EAAGL,UAAU,YAA3B,SACE,cAAC,IAAD,CAAMM,GAAG,QAAT,4BAGJ,cAAC,GAAD,CAAMyD,YAAU,Q,kBC1EdC,EAASvB,IAATuB,KAqBOC,MAnBf,YAA4C,IAAbC,EAAY,EAAZA,SAC7B,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKZ,KAAM,EAAX,UACE,cAACU,EAAD,UACE,0CAASE,QAAT,IAASA,OAAT,EAASA,EAAUC,KAAnB,SAEF,cAAC,IAAD,CAAQnE,UAAU,iBAAiBC,IAAKiE,EAASE,UACjD,cAACJ,EAAD,UACE,wCAASE,QAAT,IAASA,OAAT,EAASA,EAAUG,YAGvB,eAAC,IAAD,CAAKf,KAAM,EAAX,cAAgBI,IAAO,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAUI,WAClC,cAAC,IAAD,CAAKhB,KAAM,EAAX,SAAeI,IAAO,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAUK,mBACjC,eAAC,IAAD,CAAKjB,KAAM,EAAX,UAAeI,IAAO,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAUM,aAAjC,WCZEC,EAAUC,IAAVD,MA+COE,MA7Cf,WAAsB,IAAD,EACnB,EAA6BnC,IAArBG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRgC,EAAY,OAAGjC,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYkC,UAGjC,OADA9B,QAAQC,IAAIL,GACRC,EAEA,cAAC,IAAD,CACEK,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAKb,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKC,KAAM,EAAX,uBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,+BACA,cAAC,IAAD,CAAKA,KAAM,EAAX,qBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,uBAEF,cAAC,IAAD,iBACGsB,QADH,IACGA,OADH,EACGA,EAAcE,KAAI,SAACZ,GAAD,OACjB,cAAC,IAAD,CAAKZ,KAAM,GAAX,SACE,cAAC,IAAD,UACE,cAACmB,EAAD,CAEEM,WAAW,EACXC,OACE,cAAC,EAAD,CAAuCd,SAAUA,GAAvBA,EAASe,IAJvC,SAOGC,aAAwB,OAARhB,QAAQ,IAARA,OAAA,EAAAA,EAAUiB,cAAe,KANrCjB,EAASe,OAHAf,EAASe,a,SClC/BjB,EAASvB,IAATuB,KAcOoB,MAZf,YAA+C,IAAvBlF,EAAsB,EAAtBA,KAAMqD,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACnC,OACE,eAAC,IAAD,CAAKxD,UAAU,aAAf,UACE,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,UAAOE,IACP,cAAC,EAAD,UAAOqD,OAET,cAAC,EAAD,CAAMvD,UAAU,QAAhB,SAAyBwD,MALMD,ICJ7BS,EAASvB,IAATuB,KAcOqB,MAZf,YAAqD,IAAvBnF,EAAsB,EAAtBA,KAAMqD,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACzC,OACE,eAAC,IAAD,CAAKxD,UAAU,aAAf,UACE,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,UAAOE,IACP,cAAC,EAAD,UAAOqD,OAET,cAAC,EAAD,CAAMvD,UAAU,QAAhB,SAAyBwD,QCTvBpD,EAAUqC,IAAVrC,MAeOkF,MAbf,YAAsC,IAATC,EAAQ,EAARA,KAC3B,OACE,eAAC,IAAD,CAAKvF,UAAU,YAAf,UACE,cAAC,EAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SACGuF,EAAKtC,OAER,mBAAGuC,KAAMD,EAAKpE,IAAKsE,OAAO,SAASC,IAAI,aAAvC,SACGH,EAAKlB,SALsBkB,EAAKlB,O,gFCDjCjE,GAAUqC,IAAVrC,MA+EOuF,OA7Ef,YAAoE,IAA/CxD,EAA8C,EAA9CA,WAAYyD,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,SAAU5D,EAAU,EAAVA,OACvD,EAA6BM,EAAyB,CACpDN,SACAE,eAFMQ,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAId,EAAsCvD,mBAAQ,OAACsD,QAAD,IAACA,OAAD,EAACA,EAAMA,MAArD,mBAAOmD,EAAP,KAAoBC,EAApB,KAEArG,qBAAU,WACRqG,EAAc,OAACpD,QAAD,IAACA,OAAD,EAACA,EAAMA,QACpB,CAACR,EAAY4D,EAAgBpD,IAKhC,IAHA,IAAMqD,EAAY,GACZC,EAAgB,GAEbC,EAAI,EAAGA,GAAC,OAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAAaK,eAAhB,aAAG,EAAsBC,QAAQF,IAAK,CAAC,IAAD,EACrDF,EAAUK,KAAKP,EAAYK,QAAQD,GAAGI,OACtCL,EAAcI,KACZ,IAAIE,KAAKT,EAAYK,QAAQD,GAAGM,WAAWC,sBAI/C,IAAMC,EAAW,CACfC,OAAQV,EACRW,SAAU,CACR,CACEC,MAAM,eACNlE,KAAMqD,EACNc,MAAM,EACNC,gBAAiB,UACjBC,YAAa,aAiBnB,OAAIpE,EAEA,cAAC,IAAD,CACEK,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAKb,qCACE,eAAC,IAAD,CAAKrD,UAAU,eAAf,UACE,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,cAA3B,UACG6F,EADH,kBAGA,eAAC,IAAD,CAAK7F,UAAU,kBAAf,UACE,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,eAA3B,gBACG8F,QADH,IACGA,OADH,EACGA,EAAamB,SAEhB,eAAC,GAAD,CAAO5G,MAAO,EAAGL,UAAU,gBAA3B,qBACW6F,EADX,YAC8BD,WAIlC,cAAC,KAAD,CAAMjD,KAAM+D,EAAUQ,QAtCV,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,aCvBjBlH,GAAUqC,IAAVrC,MACAmH,GAAWC,IAAXD,OAkLOE,OAhLf,WAA0B,IAAD,IACfxF,EAAWyF,cAAXzF,OACR,EAAoC5C,mBAAS,MAA7C,mBAAO8C,EAAP,KAAmBwF,EAAnB,KACA,EAA6BrF,EAAwBL,GAA7CU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAERgF,EAAa,OAAGjF,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYkF,KAElC,GADA9E,QAAQC,IAAIL,GACRC,EACF,OACE,cAAC,IAAD,CACEK,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAIf,IAEMP,EAAQ,CACZ,CACES,MAAO,eACPC,MAAM,KAAD,OAAOoE,EAActB,OAAS5C,IAAQkE,EAActB,QACzDpG,KAAM,cAAC4H,GAAA,EAAD,KAER,CAAEvE,MAAO,OAAQC,MAAOoE,EAAczD,KAAMjE,KAAM,cAAC6H,GAAA,EAAD,KAClD,CACExE,MAAO,aACPC,MAAM,KAAD,OAAOoE,EAActD,QAAUZ,IAAQkE,EAActD,SAC1DpE,KAAM,cAAC8H,GAAA,EAAD,KAER,CACEzE,MAAO,aACPC,MAAM,KAAD,OAAOoE,EAAcK,WAAavE,IAAQkE,EAAcK,YAC7D/H,KAAM,cAAC4H,GAAA,EAAD,KAER,CACEvE,MAAO,4BACPC,MAAM,KAAD,OAAOE,IAAQkE,EAAcM,YAAY5B,QAC9CpG,KAAM,cAACiI,GAAA,EAAD,MAIJC,EAAe,CACnB,CACE7E,MAAO,oBACPC,MAAOoE,EAAcrD,gBACrBrE,KAAM,cAACY,EAAA,EAAD,KAER,CACEyC,MAAO,sBACPC,MAAOoE,EAAcS,kBACrBnI,KAAM,cAACa,EAAA,EAAD,KAER,CACEwC,MAAO,kBACPC,MAAOoE,EAAcU,eACnB,cAACC,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,IAEFtI,KAAM,cAACuI,GAAA,EAAD,KAER,CACElF,MAAO,eACPC,MAAM,KAAD,OAAOE,IAAQkE,EAAcc,cAClCxI,KAAM,cAACuI,GAAA,EAAD,KAER,CACElF,MAAO,qBACPC,MAAM,KAAD,OAAOE,IAAQkE,EAAce,oBAClCzI,KAAM,cAACuI,GAAA,EAAD,MAGV,OACE,eAAC,IAAD,CAAKzI,UAAU,wBAAf,UAEE,eAAC,IAAD,CAAKA,UAAU,eAAf,UACE,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,UACG4H,EAAcvD,KADjB,KACyBuD,EAAcgB,KADvC,aAGA,8BACGhB,EAAcvD,KADjB,sFAQF,cAAC,IAAD,CACEwE,aAAa,KACb7I,UAAU,oBACV8I,YAAY,oBACZC,SAAU,SAACvF,GAAD,OAAWmE,EAAcnE,IAJrC,SAxES,CAAC,KAAM,MAAO,KAAM,MAAO,KAAM,KAAM,KAAM,MA8E9CsB,KAAI,SAACkE,GAAD,OACR,cAACzB,GAAD,UAAoByB,GAAPA,QAMjB,cAAC,GAAD,CACE7G,WAAYA,EACZyD,aAAclC,IAAQkE,EAActB,OACpCT,SAAU+B,EAAcvD,KACxBpC,OAAQ2F,EAAc3C,KAGxB,eAAC,IAAD,CAAKjF,UAAU,kBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,wBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,gCAAf,UAEE,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,UACG4H,EAAcvD,KADjB,uBAGA,kEACoCuD,EAAcvD,KADlD,8EAMDvB,EAAMgC,KAAI,gBAAG5E,EAAH,EAAGA,KAAMqD,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,MAAhB,OACT,cAAC,EAAD,CAEEtD,KAAMA,EACNqD,MAAOA,EACPC,MAAOA,GAHc,IAAhB5C,KAAKC,gBAQhB,eAAC,IAAD,CAAKb,UAAU,mBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACE,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,8BAGA,uEACyC4H,EAAcvD,KADvD,6EAKD+D,EAAatD,KAAI,gBAAG5E,EAAH,EAAGA,KAAMqD,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,MAAhB,OAChB,cAAC,EAAD,CAEEtD,KAAMA,EACNqD,MAAOA,EACPC,MAAOA,GAHc,IAAhB5C,KAAKC,mBAUlB,eAAC,IAAD,CAAKb,UAAU,iBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,YAAf,UACE,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,qBACW4H,EAAcvD,KADzB,OAGCa,YAAgB0C,EAAczC,gBAEjC,eAAC,IAAD,CAAKnF,UAAU,aAAf,UACE,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,UACG4H,EAAcvD,KADjB,YADF,UAIGuD,EAAcqB,aAJjB,aAIG,EAAqBnE,KAAI,SAACS,GAAD,OACxB,cAAC,EAAD,CAAmBA,KAAMA,GAA2B,IAAhB3E,KAAKC,uB,oBC/HtCqI,OA1Df,YAA2C,IAAD,EAAdnF,EAAc,EAAdA,WAE1B,EAA6B1B,EADf0B,EAAa,GAAK,KACxBpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACd,EAA8BvD,mBAAQ,OAACsD,QAAD,IAACA,GAAD,UAACA,EAAMA,YAAP,aAAC,EAAYwG,OAAnD,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoChK,mBAAS,IAA7C,mBAAOiK,EAAP,KAAmBC,EAAnB,KAUA,OATAxG,QAAQC,IAAIoG,GAEZ1J,qBAAU,WAAO,IAAD,EACR8J,EAAY,OAAG7G,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYwG,MAAMM,QAAO,SAAC5B,GAAD,OAC5CA,EAAKxD,KAAKqF,cAAcC,SAASL,EAAWM,wBAE9CP,EAAWG,KACV,CAAC7G,EAAM2G,IAEN1G,EAEA,cAAC,IAAD,CACEK,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAKb,sCACIU,GACA,qBAAK/D,UAAU,gBAAf,SACE,cAAC,KAAD,CACE8I,YAAY,wBACZC,SAAU,SAACc,GAAD,OAAON,EAAcM,EAAEpE,OAAOjC,YAI9C,cAAC,IAAD,CAAKsG,OAAQ,CAAC,GAAI,IAAK9J,UAAU,wBAAjC,gBACGoJ,QADH,IACGA,OADH,EACGA,EAAStE,KAAI,SAACiF,GAAD,OACZ,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGlK,UAAU,cAAtC,SACE,cAAC,IAAD,CAAMM,GAAE,kBAAayJ,EAAS9E,IAA9B,SACE,eAAC,KAAD,CACE1B,MAAK,UAAKwG,EAAS5F,KAAd,aAAuB4F,EAAS1F,MACrC8F,MACE,qBAAKnK,UAAU,eAAeC,IAAK8J,EAAS3F,QAASgG,IAAI,KAE3DC,WAAS,EALX,UAOE,wCAAW3G,IAAQqG,EAASzD,UAC5B,6CAAgB5C,IAAQqG,EAAS9B,cACjC,+CAAkBvE,IAAQqG,EAAS9C,iBAXgB8C,EAAS9E,a,qBC3CtE7D,GAAU,CACd,iBAAkB,OAClB,kBAAmB,mCACnB,iBAAkB,sDAOPkJ,GAAgBhJ,YAAU,CACrCC,YAAa,gBACbC,UAAWC,YAAe,CAAEC,QANd,6CAOdC,UAAW,SAACC,GAAD,MAAc,CACvB2I,cAAe3I,EAAQE,MAAM,CAC3BA,MAAO,gBAAG0I,EAAH,EAAGA,aAAczI,EAAjB,EAAiBA,MAAjB,MAPmB,CAAEZ,IAQZ,kBAAD,OACOqJ,EADP,8DACyEzI,GATvDX,mBAexBqJ,GAA0BH,GAA1BG,sBCjBPzG,GAAgBvB,IAAhBuB,KAAM5D,GAAUqC,IAAVrC,MACNmH,GAAWC,IAAXD,OAsIOmD,OApIf,YAA+B,IAAD,EAAd3G,EAAc,EAAdA,WACRhC,EAAQgC,EAAa,GAAK,IAIhC,EAAwC1E,mBAAS,kBAAjD,mBAAOmL,EAAP,KAAqBG,EAArB,KAGA,EACEtI,EAAmBN,GADP6I,EAAd,EAAQjI,KAA8BkI,EAAtC,EAA0BjI,WAI1B,EAA8BvD,mBAAQ,OAACuL,QAAD,IAACA,GAAD,UAACA,EAAYjI,YAAb,aAAC,EAAkBwG,OAAzD,mBAAOC,EAAP,KAAgBC,EAAhB,KAGA,EAA6BoB,GAAsB,CACjDD,aAAcA,EACdzI,MAAOgC,EAAa,EAAI,KAFlBpB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WAgBd,GAXAG,QAAQC,IAAI4H,GAGZlL,qBAAU,WAAO,IAAD,EACR8J,EAAY,OAAGoB,QAAH,IAAGA,GAAH,UAAGA,EAAYjI,YAAf,aAAG,EAAkBwG,MAAMM,QAAO,SAAC5B,GAAD,OAClDA,EAAKxD,KAAKqF,cAAcC,SAAS,OAEnCN,EAAWG,KACV,CAACoB,IAGAC,EACF,OACE,cAAC,IAAD,CACE5H,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAGf,GAAIT,EACF,OACE,cAAC,IAAD,CACEK,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAMf,KAAI,OAACV,QAAD,IAACA,OAAD,EAACA,EAAMa,OAAO,MAAO,cAGzB,IAAMsH,EACJ,kEAEF,OACE,eAAC,IAAD,CAAKhB,OAAQ,CAAC,GAAI,IAAlB,WAEI/F,GACA,cAAC,IAAD,CAAKT,KAAM,GAAX,SACE,eAAC,IAAD,CACEyH,YAAU,EACV/K,UAAU,cACV8I,YAAY,kBACZkC,iBAAiB,WACjBjC,SAAU,SAACvF,GAAD,OAAWmH,EAAgBnH,IACrCyH,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SAAS1B,cAAc2B,QAAQH,EAAMxB,eAAiB,GAPjE,UAUE,cAAC,GAAD,CAAQlG,MAAM,iBAAd,4BAVF,OAWG4F,QAXH,IAWGA,OAXH,EAWGA,EAAStE,KAAI,SAACiF,GAAD,OACZ,cAAC,GAAD,CAA0BvG,MAAOuG,EAAS1F,KAA1C,SACG0F,EAAS1F,MADC0F,EAAS9E,YAhBhC,OA0BGtC,QA1BH,IA0BGA,OA1BH,EA0BGA,EAAMa,MAAMsB,KAAI,SAACwG,EAAMpF,GAAP,uBACf,cAAC,IAAD,CAAK8D,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzB,SACE,cAAC,KAAD,CAAMG,WAAS,EAACrK,UAAU,YAA1B,SACE,oBAAGwF,KAAM8F,EAAKnK,IAAKsE,OAAO,SAASC,IAAI,aAAvC,UACE,sBAAK1F,UAAU,uBAAf,UACE,cAAC,GAAD,CAAOA,UAAU,aAAaK,MAAO,EAArC,SACGiL,EAAKjH,OAER,qBACEkH,MAAO,CAAEC,SAAU,QAASC,UAAW,SACvCxL,KAAS,OAAJqL,QAAI,IAAJA,GAAA,UAAAA,EAAMI,aAAN,mBAAaC,iBAAb,eAAwBC,aAAcd,EAC3CV,IAAKkB,EAAKjH,UAGd,4BACGiH,EAAKnG,YAAc,IAAnB,UACMmG,EAAKnG,YAAY0G,UAAU,EAAG,MACjCP,EAAKnG,cAEX,sBAAKnF,UAAU,qBAAf,UACE,gCACE,cAAC,IAAD,CACEC,KACE,UAAAqL,EAAKQ,SAAS,UAAd,mBAAkBJ,aAAlB,mBAAyBC,iBAAzB,eAAoCC,aACpCd,EAEFV,IAAKkB,EAAKjH,OAEZ,cAAC,GAAD,CAAMrE,UAAU,gBAAhB,gBACGsL,QADH,IACGA,GADH,UACGA,EAAMQ,SAAS,UADlB,aACG,EAAmBzH,UAGxB,cAAC,GAAD,UACG0H,KAAOT,EAAKU,eAAeC,QAAQ,MAAMC,qBAhCnBhG,U,OCrC1BiG,I,GAAAA,GAjDf,WACE,OACE,sBAAKnM,UAAU,MAAf,UACE,qBAAKA,UAAU,SAAf,SACE,cAAC,EAAD,MAEF,sBAAKA,UAAU,OAAf,UACE,cAAC,IAAD,UACE,qBAAKA,UAAU,SAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoM,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,kBAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACE,cAAC,GAAD,aAMR,sBAAKrM,UAAU,SAAf,UACE,eAAC,IAAWI,MAAZ,CACEC,MAAO,EACPkL,MAAO,CAAErI,MAAO,QAASoJ,UAAW,UAFtC,yBAIc,uBAJd,yBAOA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMhM,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBACA,cAAC,IAAD,CAAMA,GAAG,oBAAT,8BACA,cAAC,IAAD,CAAMA,GAAG,QAAT,+B,2BClDGiM,gBAAe,CAC5BC,SAAO,sBACJnL,EAAUE,YAAcF,EAAUmL,SAD9B,gBAEJlC,GAAc/I,YAAc+I,GAAckC,SAFtC,M,cCMTC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,KAAD,CAAUC,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.34efe70d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Menu, Typography, Avatar } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  HomeOutlined,\r\n  MoneyCollectOutlined,\r\n  BulbOutlined,\r\n  FundOutlined,\r\n  MenuOutlined,\r\n} from \"@ant-design/icons\";\r\nimport icon from \"../assets/images/cryptocurrency.png\";\r\n\r\nfunction Navbar() {\r\n  const [activeMenu, setActiveMenu] = useState(true);\r\n  const [screenSize, setScreenSize] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => setScreenSize(window.innerWidth);\r\n    window.addEventListener(\"resize\", handleResize);\r\n    handleResize();\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, [setScreenSize]);\r\n\r\n  useEffect(() => {\r\n    if (screenSize < 768) {\r\n      setActiveMenu(false);\r\n    } else {\r\n      setActiveMenu(true);\r\n    }\r\n  }, [screenSize, setActiveMenu]);\r\n\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"logo-container\">\r\n        <Avatar src={icon} size=\"large\" />\r\n        <Typography.Title level={2} className=\"logo\">\r\n          <Link to=\"/\">Cryptoverse</Link>\r\n        </Typography.Title>\r\n        <Button\r\n          className=\"menu-control-container\"\r\n          onClick={() => setActiveMenu(!activeMenu)}\r\n        >\r\n          <MenuOutlined />\r\n        </Button>\r\n      </div>\r\n      {activeMenu && (\r\n        <Menu theme=\"dark\">\r\n          <Menu.Item key={Math.random() * 4000} icon={<HomeOutlined />}>\r\n            <Link to=\"/\">Home</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={Math.random() * 4000} icon={<FundOutlined />}>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={Math.random() * 4000} icon={<MoneyCollectOutlined />}>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key={Math.random() * 4000} icon={<BulbOutlined />}>\r\n            <Link to=\"/news\">News</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst cryptoApiHeaders = {\r\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"dfb1333b3dmsh946a0844723c9b2p16153fjsn1557d90f52fc\",\r\n};\r\n\r\nconst baseUrl = \"https://coinranking1.p.rapidapi.com/\";\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: \"cryptoApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getSingleCrypto: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timePeriod }) =>\r\n        createRequest(`coin/${coinId}/history/${timePeriod}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest(`/exchanges`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useGetCryptosQuery,\r\n  useGetSingleCryptoQuery,\r\n  useGetCryptoHistoryQuery,\r\n  useGetExchangesQuery,\r\n} = cryptoApi;\r\n","import React from \"react\";\r\nimport { Typography, Row, Col, Statistic } from \"antd\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useGetCryptosQuery } from \"../services/CryptoApi.js\";\r\nimport millify from \"millify\";\r\nimport { Cryptocurrencies, News } from \"./index\";\r\nimport Loader from \"react-loader-spinner\";\r\nconst { Title } = Typography;\r\n\r\nfunction Homepage() {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  const globalStats = data?.data?.stats;\r\n  console.log(data);\r\n  if (isFetching)\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">\r\n        Global Crypto Stats\r\n      </Title>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Cryptocurrencies\"\r\n            value={globalStats?.total}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Exchanges\"\r\n            value={millify(globalStats?.totalExchanges)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Market Cap\"\r\n            value={globalStats?.totalMarketCap}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total 24h Volumn\"\r\n            value={millify(globalStats?.total24hVolume)}\r\n          />\r\n        </Col>\r\n        <Col span={12}>\r\n          <Statistic\r\n            title=\"Total Markets\"\r\n            value={millify(globalStats?.totalMarkets)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Top 10 Cryptocurrencies in the world\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/cryptocurrencies\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">\r\n          Latest Crypto News\r\n        </Title>\r\n        <Title level={3} className=\"show-more\">\r\n          <Link to=\"/news\">Show More</Link>\r\n        </Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Homepage;\r\n","import React from \"react\";\r\nimport { Row, Col, Typography, Avatar } from \"antd\";\r\nimport millify from \"millify\";\r\n\r\nconst { Text } = Typography;\r\n\r\nfunction ExchangePanelHeader({ exchange }) {\r\n  return (\r\n    <Row>\r\n      <Col span={6}>\r\n        <Text>\r\n          <strong>{exchange?.rank}.</strong>\r\n        </Text>\r\n        <Avatar className=\"exchange-image\" src={exchange.iconUrl}></Avatar>\r\n        <Text>\r\n          <strong>{exchange?.name}</strong>\r\n        </Text>\r\n      </Col>\r\n      <Col span={6}>${millify(exchange?.volume)}</Col>\r\n      <Col span={6}>{millify(exchange?.numberOfMarkets)}</Col>\r\n      <Col span={6}>{millify(exchange?.marketShare)}%</Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default ExchangePanelHeader;\r\n","import React from \"react\";\r\nimport { useGetExchangesQuery } from \"../services/CryptoApi.js\";\r\nimport { Row, Col, Collapse } from \"antd\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport ExchangePanelHeader from \"./ExchangePanelHeader.jsx\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nfunction Exchanges() {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangeList = data?.data?.exchanges;\r\n\r\n  console.log(data);\r\n  if (isFetching)\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volumne</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangeList?.map((exchange) => (\r\n          <Col span={24} key={exchange.id}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={\r\n                  <ExchangePanelHeader key={exchange.id} exchange={exchange} />\r\n                }\r\n              >\r\n                {HTMLReactParser(exchange?.description || \"\")}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Exchanges;\r\n","import React from \"react\";\r\nimport { Col, Typography } from \"antd\";\r\nconst { Text } = Typography;\r\n\r\nfunction SingleStates({ icon, title, value }) {\r\n  return (\r\n    <Col className=\"coin-stats\" key={title}>\r\n      <Col className=\"coin-stats-name\">\r\n        <Text>{icon}</Text>\r\n        <Text>{title}</Text>\r\n      </Col>\r\n      <Text className=\"stats\">{value}</Text>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default SingleStates;\r\n","import React from \"react\";\r\nimport { Col, Typography } from \"antd\";\r\nconst { Text } = Typography;\r\n\r\nfunction SingleGenericStats({ icon, title, value }) {\r\n  return (\r\n    <Col className=\"coin-stats\">\r\n      <Col className=\"coin-stats-name\">\r\n        <Text>{icon}</Text>\r\n        <Text>{title}</Text>\r\n      </Col>\r\n      <Text className=\"stats\">{value}</Text>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default SingleGenericStats;\r\n","import React from \"react\";\r\nimport { Row, Typography } from \"antd\";\r\nconst { Title } = Typography;\r\n\r\nfunction CryptoDetailsLink({ link }) {\r\n  return (\r\n    <Row className=\"coin-link\" key={link.name}>\r\n      <Title level={5} className=\"link-name\">\r\n        {link.type}\r\n      </Title>\r\n      <a href={link.url} target=\"_blank\" rel=\"noreferrer\">\r\n        {link.name}\r\n      </a>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default CryptoDetailsLink;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport { Col, Row, Typography } from \"antd\";\r\nimport { useGetCryptoHistoryQuery } from \"../services/CryptoApi\";\r\nimport Loader from \"react-loader-spinner\";\r\nconst { Title } = Typography;\r\n\r\nfunction LineChart({ timePeriod, currentPrice, coinName, coinId }) {\r\n  const { data, isFetching } = useGetCryptoHistoryQuery({\r\n    coinId,\r\n    timePeriod,\r\n  });\r\n  const [coinHistory, setCoinHistory] = useState(data?.data);\r\n\r\n  useEffect(() => {\r\n    setCoinHistory(data?.data);\r\n  }, [timePeriod, setCoinHistory, data]);\r\n\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.history?.length; i++) {\r\n    coinPrice.push(coinHistory.history[i].price);\r\n    coinTimestamp.push(\r\n      new Date(coinHistory.history[i].timestamp).toLocaleDateString()\r\n    );\r\n  }\r\n\r\n  const dataList = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: `price in USD`,\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: \"#0071bd\",\r\n        borderColor: \"#0071bd\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  if (isFetching)\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">\r\n          {coinName} Price Chart\r\n        </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">\r\n            {coinHistory?.change}\r\n          </Title>\r\n          <Title level={5} className=\"current-price\">\r\n            Current {coinName} Price: ${currentPrice}\r\n          </Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={dataList} options={options} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default LineChart;\r\n","import React, { useState } from \"react\";\r\nimport HTMLReactParser from \"html-react-parser\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport millify from \"millify\";\r\nimport { Col, Row, Typography, Select } from \"antd\";\r\nimport SingleStates from \"./SingleStates.jsx\";\r\nimport SingleGenericStats from \"./SingleGenericStats.jsx\";\r\nimport CryptoDetailsLink from \"./CryptoDetailsLink.jsx\";\r\nimport {\r\n  MoneyCollectOutlined,\r\n  DollarCircleOutlined,\r\n  FundOutlined,\r\n  ExclamationCircleOutlined,\r\n  StopOutlined,\r\n  TrophyOutlined,\r\n  CheckOutlined,\r\n  NumberOutlined,\r\n  ThunderboltOutlined,\r\n} from \"@ant-design/icons\";\r\nimport LineChart from \"./LineChart.jsx\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport { useGetSingleCryptoQuery } from \"../services/CryptoApi.js\";\r\n\r\nconst { Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nfunction CryptoDetails() {\r\n  const { coinId } = useParams();\r\n  const [timePeriod, setTimePeriod] = useState(\"7d\");\r\n  const { data, isFetching } = useGetSingleCryptoQuery(coinId);\r\n  // const [coinHistory, setCoinHisotry]  = useState(\"7d\");\r\n  const cryptoDetails = data?.data?.coin;\r\n  console.log(data);\r\n  if (isFetching)\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    );\r\n\r\n  const time = [\"3h\", \"24h\", \"7d\", \"30d\", \"1y\", \"3m\", \"3y\", \"5y\"];\r\n\r\n  const stats = [\r\n    {\r\n      title: \"Price to USD\",\r\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    {\r\n      title: \"24h Volume\",\r\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\r\n      icon: <ThunderboltOutlined />,\r\n    },\r\n    {\r\n      title: \"Market Cap\",\r\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\r\n      icon: <DollarCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"All-time-high(daily avg.)\",\r\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\r\n      icon: <TrophyOutlined />,\r\n    },\r\n  ];\r\n\r\n  const genericStats = [\r\n    {\r\n      title: \"Number Of Markets\",\r\n      value: cryptoDetails.numberOfMarkets,\r\n      icon: <FundOutlined />,\r\n    },\r\n    {\r\n      title: \"Number Of Exchanges\",\r\n      value: cryptoDetails.numberOfExchanges,\r\n      icon: <MoneyCollectOutlined />,\r\n    },\r\n    {\r\n      title: \"Aprroved Supply\",\r\n      value: cryptoDetails.approvedSupply ? (\r\n        <CheckOutlined />\r\n      ) : (\r\n        <StopOutlined />\r\n      ),\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Total Supply\",\r\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n    {\r\n      title: \"Circulating Supply\",\r\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\r\n      icon: <ExclamationCircleOutlined />,\r\n    },\r\n  ];\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      {/* single coin heading  */}\r\n      <Col className=\"coin-heading\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {cryptoDetails.name} ({cryptoDetails.slug}) Price\r\n        </Title>\r\n        <p>\r\n          {cryptoDetails.name} live price in US Dollar (USD). View value\r\n          statistics, market cap and supply.\r\n        </p>\r\n      </Col>\r\n      {/* end of single coin heading  */}\r\n\r\n      {/* timeperiod select option box  */}\r\n      <Select\r\n        defaultValue=\"7d\"\r\n        className=\"select-timeperiod\"\r\n        placeholder=\"Select Timeperiod\"\r\n        onChange={(value) => setTimePeriod(value)}\r\n      >\r\n        {time.map((date) => (\r\n          <Option key={date}>{date}</Option>\r\n        ))}\r\n      </Select>\r\n      {/* end of timeperiod select option box  */}\r\n\r\n      {/* line chart */}\r\n      <LineChart\r\n        timePeriod={timePeriod}\r\n        currentPrice={millify(cryptoDetails.price)}\r\n        coinName={cryptoDetails.name}\r\n        coinId={cryptoDetails.id}\r\n      />\r\n      {/* end of line chart */}\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            {/* crypto coin title and statistics */}\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              {cryptoDetails.name} Value statistics\r\n            </Title>\r\n            <p>\r\n              An Overview showing the stats of {cryptoDetails.name} , such as\r\n              the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {/* show rank price 24h volumn */}\r\n          {stats.map(({ icon, title, value }) => (\r\n            <SingleStates\r\n              key={Math.random() * 1000}\r\n              icon={icon}\r\n              title={title}\r\n              value={value}\r\n            />\r\n          ))}\r\n          {/* end of show rank price 24h volumn */}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">\r\n              Other Stats Info\r\n            </Title>\r\n            <p>\r\n              An overview showing the statistics of {cryptoDetails.name}, such\r\n              as the base and quote currency, the rank, and trading volume.\r\n            </p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <SingleGenericStats\r\n              key={Math.random() * 10000}\r\n              icon={icon}\r\n              title={title}\r\n              value={value}\r\n            />\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n\r\n      {/* coin description link  */}\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            What is {cryptoDetails.name}?\r\n          </Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">\r\n            {cryptoDetails.name} Links\r\n          </Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <CryptoDetailsLink link={link} key={Math.random() * 100000} />\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      {/* end of coin description  */}\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default CryptoDetails;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport millify from \"millify\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Row, Col, Input } from \"antd\";\r\n\r\nimport { useGetCryptosQuery } from \"../services/CryptoApi.js\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nfunction Cryptocurrencies({ simplified }) {\r\n  const count = simplified ? 10 : 100;\r\n  const { data, isFetching } = useGetCryptosQuery(count);\r\n  const [cryptos, setCryptos] = useState(data?.data?.coins);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  console.log(cryptos);\r\n\r\n  useEffect(() => {\r\n    const filteredData = data?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(searchTerm.toLocaleLowerCase())\r\n    );\r\n    setCryptos(filteredData);\r\n  }, [data, searchTerm]);\r\n\r\n  if (isFetching)\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <>\r\n      {!simplified && (\r\n        <div className=\"search-crypto\">\r\n          <Input\r\n            placeholder=\"Search Cryptocurrency\"\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n        </div>\r\n      )}\r\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n        {cryptos?.map((currency) => (\r\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n            <Link to={`/crypto/${currency.id}`}>\r\n              <Card\r\n                title={`${currency.rank}. ${currency.name}`}\r\n                extra={\r\n                  <img className=\"crypto-image\" src={currency.iconUrl} alt=\"\" />\r\n                }\r\n                hoverable\r\n              >\r\n                <p>Price: {millify(currency.price)}</p>\r\n                <p>Market cap: {millify(currency.marketCap)}</p>\r\n                <p>Daily Change: {millify(currency.change)}</p>\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cryptocurrencies;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nconst headers = {\r\n  \"x-bingapis-sdk\": \"true\",\r\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\r\n  \"x-rapidapi-key\": \"dfb1333b3dmsh946a0844723c9b2p16153fjsn1557d90f52fc\",\r\n};\r\n\r\nconst baseUrl = \"https://bing-news-search1.p.rapidapi.com\";\r\n\r\nconst createRequest = (url) => ({ url, headers });\r\n\r\nexport const CryptoNewsApi = createApi({\r\n  reducerPath: \"cryptoNewsApi\",\r\n  baseQuery: fetchBaseQuery({ baseUrl }),\r\n  endpoints: (builder) => ({\r\n    getCryptoNews: builder.query({\r\n      query: ({ newsCategory, count }) =>\r\n        createRequest(\r\n          `/news/search?q=${newsCategory}&safeSearch=off&textFormat=Raw&freshness=Day&count=${count}`\r\n        ),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptoNewsQuery } = CryptoNewsApi;\r\n","/* eslint-disable react/jsx-no-target-blank */\r\n/* eslint-disable react/jsx-no-comment-textnodes */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { useGetCryptoNewsQuery } from \"../services/CryptoNewsApi.js\";\r\nimport { useGetCryptosQuery } from \"../services/CryptoApi.js\";\r\nimport Loader from \"react-loader-spinner\";\r\nconst { Text, Title } = Typography;\r\nconst { Option } = Select;\r\n\r\nfunction News({ simplified }) {\r\n  const count = simplified ? 10 : 100;\r\n\r\n  //set default crypto category for getting news via\r\n  //crypto category\r\n  const [newsCategory, setNewsCategory] = useState(\"Cryptocurrency\");\r\n\r\n  //get all cryptoList by passing count\r\n  const { data: cryptoList, isFetching: isCryptosFetching } =\r\n    useGetCryptosQuery(count);\r\n\r\n  //state for all cryptos\r\n  const [cryptos, setCryptos] = useState(cryptoList?.data?.coins);\r\n\r\n  //get all cryptoNews  by passing crypto category\r\n  const { data, isFetching } = useGetCryptoNewsQuery({\r\n    newsCategory: newsCategory,\r\n    count: simplified ? 6 : 12,\r\n  }); //end statment\r\n\r\n  console.log(cryptoList);\r\n\r\n  //useEffect for getting crypto news whenever the crypto category has been updated\r\n  useEffect(() => {\r\n    const filteredData = cryptoList?.data?.coins.filter((coin) =>\r\n      coin.name.toLowerCase().includes(\"\")\r\n    );\r\n    setCryptos(filteredData);\r\n  }, [cryptoList]);\r\n  //end of useEffect\r\n\r\n  if (isCryptosFetching)\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  if (isFetching) {\r\n    return (\r\n      <Loader\r\n        type=\"Circles\"\r\n        color=\"#00BFFF\"\r\n        height={80}\r\n        width={80}\r\n        timeout={3000}\r\n      />\r\n    );\r\n  }\r\n\r\n  //if crypto news Data not still comming then show loading\r\n  if (!data?.value) return \"Loading....\";\r\n\r\n  //demoImage if any crypo news has no image then will show demoImage\r\n  const demoImage =\r\n    \"https://www.bing.com/th?id=OVFT._ayKcd9lc4Yfv3X8RYAItC&pid=News\";\r\n\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {/* select options section for selecting crypto category  */}\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) =>\r\n              option.children.toLowerCase().indexOf(input.toLowerCase()) > 0\r\n            }\r\n          >\r\n            <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\r\n            {cryptos?.map((currency) => (\r\n              <Option key={currency.id} value={currency.name}>\r\n                {currency.name}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {/* end of crypto category select option  */}\r\n\r\n      {/* below I am showing all the crypto related news  */}\r\n      {data?.value.map((news, i) => (\r\n        <Col xs={24} sm={12} lg={8} key={i}>\r\n          <Card hoverable className=\"news-card\">\r\n            <a href={news.url} target=\"_blank\" rel=\"moreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>\r\n                  {news.name}\r\n                </Title>\r\n                <img\r\n                  style={{ maxWidth: \"200px\", maxHeight: \"100px\" }}\r\n                  src={news?.image?.thumbnail?.contentUrl || demoImage}\r\n                  alt={news.name}\r\n                />\r\n              </div>\r\n              <p>\r\n                {news.description > 100\r\n                  ? `${news.description.substring(0, 100)}`\r\n                  : news.description}\r\n              </p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar\r\n                    src={\r\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\r\n                      demoImage\r\n                    }\r\n                    alt={news.name}\r\n                  />\r\n                  <Text className=\"provider-name\">\r\n                    {news?.provider[0]?.name}\r\n                  </Text>\r\n                </div>\r\n                <Text>\r\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\r\n                </Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n      {/* end of crypto news list section  */}\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default News;\r\n","import React from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport { Layout, Typography, Space } from \"antd\";\r\nimport {\r\n  Navbar,\r\n  Homepage,\r\n  Exchanges,\r\n  Cryptocurrencies,\r\n  CryptoDetails,\r\n  News,\r\n} from \"./components\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <div className=\"navbar\">\r\n        <Navbar />\r\n      </div>\r\n      <div className=\"main\">\r\n        <Layout>\r\n          <div className=\"routes\">\r\n            <Switch>\r\n              <Route exact path=\"/\">\r\n                <Homepage />\r\n              </Route>\r\n              <Route exact path=\"/exchanges\">\r\n                <Exchanges />\r\n              </Route>\r\n              <Route exact path=\"/cryptocurrencies\">\r\n                <Cryptocurrencies />\r\n              </Route>\r\n              <Route exact path=\"/crypto/:coinId\">\r\n                <CryptoDetails />\r\n              </Route>\r\n              <Route exact path=\"/news\">\r\n                <News />\r\n              </Route>\r\n            </Switch>\r\n          </div>\r\n        </Layout>\r\n\r\n        <div className=\"footer\">\r\n          <Typography.Title\r\n            level={5}\r\n            style={{ color: \"white\", textAlign: \"center\" }}\r\n          >\r\n            Cryptoverse <br />\r\n            All rights reserved\r\n          </Typography.Title>\r\n          <Space>\r\n            <Link to=\"/\">Home</Link>\r\n            <Link to=\"/exchanges\">Exchanges</Link>\r\n            <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n            <Link to=\"/news\">News</Link>\r\n          </Space>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cryptoApi } from \"../services/CryptoApi.js\";\r\nimport { CryptoNewsApi } from \"../services/CryptoNewsApi.js\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n    [CryptoNewsApi.reducerPath]: CryptoNewsApi.reducer,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport store from \"./app/store.js\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nReactDOM.render(\r\n  <Router>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}